name: Build and Test

on: [push, pull_request]

jobs:
  build-and-test:
    # We want to run on external PRs, but not on our own internal PRs as they'll be run
    # by the push to the branch. Without this if check, checks are duplicated since
    # internal PRs match both the push and pull_request events.
    if:
      github.event_name == 'push' || github.event.pull_request.head.repo.full_name !=
      github.repository

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash -l {0}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build-type: [Release]

    steps:
      - uses: actions/checkout@v4

      - uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: latest
          environment-name: testing
          init-shell: >-
            bash
            powershell
          create-args: >-
            make
            cmake
            c-compiler
            pkg-config

      - name: Make cmake build directory
        run: cmake -E make_directory build

      - name: Configure CMake (Unix)
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        working-directory: ${{ github.workspace }}/build
        run: |
          cmake .. \
          -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
          -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX

      - name: Configure CMake (Windows)
        if: matrix.os == 'windows-latest'
        working-directory: ${{ github.workspace }}\build
        shell: pwsh
        run: |
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat"

          cmake .. `
            -DCMAKE_INSTALL_PREFIX:PATH=$env:CONDA_PREFIX\Library `
            -DCMAKE_BUILD_TYPE=${{ matrix.build-type }}

      - name: Build
        working-directory: ${{ github.workspace }}/build
        run: cmake --build . --target install --config ${{ matrix.build-type }}

      - name: Test (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          test -f $CONDA_PREFIX/include/bmi.h
          test -f $CONDA_PREFIX/lib/pkgconfig/bmic.pc

      - name: Test (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          if ( -not ( Test-Path -Path $env:CONDA_PREFIX\Library\include\bmi.h ) ){ exit 1 }
          if ( -not ( Test-Path -Path $env:CONDA_PREFIX\Library\lib\pkgconfig\bmic.pc ) ){ exit 1 }
